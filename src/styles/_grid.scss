$light-colors: ('white', 'gray-light', 'gray-middle');
$dark-colors: ('gray-dark', 'gray-darkest', 'black', 'dark-1', 'dark-2', 'dark-3', 'dark-4', 'dark-5');

.grid {
  display: grid;
  grid-auto-rows: 25vh;
  grid-auto-columns: 25vw;
  grid-template-areas:
    'cell-01 cell-02 cell-03 cell-04'
    'cell-05 cell-06 cell-07 cell-08'
    'cell-09 cell-10 cell-11 cell-12'
    'cell-13 cell-14 cell-15 cell-16';

  &:not(:first-of-type) {
    position: absolute;
    top: 0;
    left: 0;
  }

  &--bordered {
    grid-gap: 1px;

    .grid__cell {
      outline: 1px solid var(--color-black);
    }
  }

  @media all and (min-width: 1281px) {
    grid-auto-rows: 25vh;
    grid-auto-columns: 25vw;
  }

  @media all and (min-width: 768px) and (max-width: 1280px) {
    grid-auto-rows: 50vh;
    grid-auto-columns: 50vw;
  }

  @media all and (min-width: 0px) and (max-width: 767px) {
    grid-auto-rows: 50vh;
    grid-auto-columns: 100vw;
  }

  &__cell {
    display: flex;
    background: transparent no-repeat center center;
    background-size: cover;
  
    @for $col from 1 to 17 {
      &:nth-child(#{$col}) {
        grid-area: cell-#{if($col < 10, '0' + $col, $col)};
      }
    }

    @each $color in $light-colors {
      &--#{$color} {
        background-color: var(--color-#{$color});
      }
    }

    @each $color in $dark-colors {
      &--#{$color} {
        background-color: var(--color-#{$color});
        color: var(--color-white);
      }
    }

    &--bottom-right {
      justify-content: flex-end;
      align-items: flex-end;
    }
  } 
}
